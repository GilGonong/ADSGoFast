name: Continuous Delivery

on:
  workflow_dispatch:
  push:
    branches: $default-branch

jobs:
    deploy-to-staging:
      name: Deploy to Staging Environment
      env:
        environmentName: staging
        skipTerraformDeployment: true
        keyVaultName: ${{ secrets.ARM_KEYVAULT_NAME }}
        # Required for Terraform
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}      
        # Customizing Terraform vars
        TF_VAR_domain : ${{ secrets.ARM_DOMAIN }}
        TF_VAR_subscription_id : ${{ secrets.ARM_SUBSCRIPTION_ID }}
        TF_VAR_tenant_id : ${{ secrets.ARM_TENANT_ID }}     
        TF_VAR_resource_group_name  : ${{ secrets.ARM_RESOURCE_GROUP_NAME }}     
        TF_VAR_state_storage_account_name  : ${{ secrets.ARM_STORAGE_NAME }}     
        TF_VAR_jumphost_password : ${{secrets.ARM_JUMPHOST_PASSWORD}}
        TF_VAR_synapse_sql_password : ${{secrets.ARM_SYNAPSE_PASSWORD}}
      environment: 
        name: staging
      runs-on: ubuntu-latest
      steps:
      
      - name: Checkout
        uses: actions/checkout@v3.0.0

      - name: Get public IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Login via Az module
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
          enable-AzPSSession: true 

      - name: Associate PAL
        id: pal_association
        run: |
          az extension add --name managementpartner 
          az managementpartner update --partner-id 6372669 || az managementpartner create --partner-id 6372669 

      - name: Terragrunt Install
        id: terragrunt_install
        working-directory: ./solution/DeploymentV2/terraform
        run: |
          brew install terragrunt    
          az keyvault network-rule add -g ${{ env.TF_VAR_resource_group_name }} --name ${{ env.keyVaultName }} --ip-address ${{ steps.ip.outputs.ipv4 }}/32

      - name: Install Jsonnet
        id: jsonnet-install
        working-directory: ./solution/DeploymentV2/
        env:
          TF_VAR_ip_address : ${{steps.ip.outputs.ipv4}}
        run: |
          wget https://github.com/google/go-jsonnet/releases/download/v0.17.0/jsonnet-go_0.17.0_linux_amd64.deb   
          sudo dpkg -i jsonnet-go_0.17.0_linux_amd64.deb 
          
      - name: Deploy Solution
        id: solution-deployment
        working-directory: ./solution/DeploymentV2/
        env:
          TF_VAR_ip_address : ${{steps.ip.outputs.ipv4}}
        run: |
          git update-index --chmod=+x ./Deploy.ps1  
          ./Deploy.ps1           
